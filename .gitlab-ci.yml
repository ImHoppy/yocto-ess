variables:
  GIT_SUBMODULE_STRATEGY: recursive
  LANG: en_US.UTF-8

stages:
  - build
  - release

build_image:
  tags:
    - yocto
  stage: build
  image: crops/yocto:debian-9-base
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.esss.lu.se >> ~/.ssh/known_hosts
  script:
    - . ./setup-env -m ifc14xx-64b -j 8 -t 8
    - bitbake ifc14xx-image
  artifacts:
    paths:
      - build_ifc14xx-64b/tmp/deploy/images/ifc14xx-64b
      - sstate-cache/
      - downloads/
    expire_in: 24 hour

build_toolchain:
  tags:
    - yocto
  stage: build
  image: crops/yocto:debian-9-base
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa gitlab.esss.lu.se >> ~/.ssh/known_hosts
  script:
    - . ./setup-env -m ifc14xx-64b -j 8 -t 8
    - bitbake ifc14xx-toolchain
  artifacts:
    paths:
      - build_ifc14xx-64b/tmp/deploy/sdk
    expire_in: 24 hour

release_sstate:
  tags:
    - yocto
  stage: release
  image: registry.esss.lu.se/ics-docker/jfrog:latest
  script:
    - jfrog rt config artifactory --url=${ARTIFACTORY_URL} --apikey=${ARTIFACTORY_API_KEY}
    - cd sstate-cache && jfrog rt upload --flat=false "*" yocto/sstate/

release_downloads:
  tags:
    - yocto
  stage: release
  image: registry.esss.lu.se/ics-docker/jfrog:latest
  script:
    - jfrog rt config artifactory --url=${ARTIFACTORY_URL} --apikey=${ARTIFACTORY_API_KEY}
    - cd downloads && find . -type f -name '*.done' -exec rm {} + && if [ -d git2 ]; then rm -r git2/; fi
    - jfrog rt upload --flat=false "*.tar.bz2" yocto/downloads/
    - jfrog rt upload --flat=false "*.tar.gz" yocto/downloads/
    - jfrog rt upload --flat=false "*.tar.xz" yocto/downloads/
    - jfrog rt upload --flat=false "*.tgz" yocto/downloads/
    - jfrog rt upload --flat=false "*.zip" yocto/downloads/

release_images_tags:
  only:
    - tags
  tags:
    - yocto
  stage: release
  image: registry.esss.lu.se/ics-docker/jfrog:latest
  script:
    - jfrog rt config artifactory --url=${ARTIFACTORY_URL} --apikey=${ARTIFACTORY_API_KEY}
    - cd build_ifc14xx-64b/tmp/deploy/images/ifc14xx-64b && echo $CI_COMMIT_SHA > $CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" boot-images/ioxos/$CI_COMMIT_TAG/

release_images_web:
  only:
    - web
  tags:
    - yocto
  stage: release
  image: registry.esss.lu.se/ics-docker/jfrog:latest
  script:
    - jfrog rt config artifactory --url=${ARTIFACTORY_URL} --apikey=${ARTIFACTORY_API_KEY}
    - cd build_ifc14xx-64b/tmp/deploy/images/ifc14xx-64b && echo $CI_COMMIT_SHA > $CI_COMMIT_SHA
    - jfrog rt upload --flat=false "*" boot-images/ioxos/$CI_PIPELINE_ID/

